#~ # Geany's snippets configuration file
#~ #
#~ # use \n or %newline% for a new line (it will be replaced by the used EOL char(s) - LF, CR/LF, CR).
#~ # use \t or %ws% for an indentation step, it will be replaced according to the current document's indent mode.
#~ # use \s to force whitespace at beginning or end of a value ('key= value' won't work, use 'key=\svalue').
#~ # use %key% for all keys defined in the [Special] section.
#~ # use %cursor% to define where the cursor should be placed after completion. You can define multiple
#~ #     %cursor% wildcards and use the "Move cursor in snippet" to jump to the next defined cursor
#~ #     position in the completed snippet.
#~ # You can define a section for each supported filetype to overwrite default settings, the section
#~ # name must match exactly the internal filetype name, run 'geany --ft-names' for a full list.
#~ #
#~ # Additionally, you can use most of the template wildcards like {developer}, {command:...},
#~ # or {date} in the snippets.
#~ # See the documentation for details.

#~ # For a list of available filetype names, execute:
#~ # geany --ft-names

#~ # Default is used for all filetypes and keys can be overwritten by [filetype] sections
#~ [Default]

#~ # special keys to be used in other snippets, cannot be used "standalone"
#~ # can be used by %key%, e.g. %brace_open%
#~ # nesting of special keys is not supported (e.g. brace_open=\n{\n%brace_close% won't work)
#~ # key "wordchars" is very special, it defines the word delimiting characters when looking for
#~ # a word to auto complete, leave commented to use the default wordchars
#~ [Special]
#~ brace_open=\n{\n\t
#~ brace_close=}\n
#~ block=\n{\n\t%cursor%\n}
#~ block_cursor=\n{\n\t%cursor%\n}
#~ #wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

#~ # Optional keybindings to insert snippets
#~ # Note: these can be overridden by Geany's configurable keybindings
#~ [Keybindings]
#~ #for=<Ctrl>7

#~ [C]
#~ if=if (%cursor%)%block_cursor%
#~ else=else%block_cursor%
#~ for=for (i = 0; i < %cursor%; i++)%block_cursor%
#~ while=while (%cursor%)%block_cursor%
#~ do=do\n{\n\t%cursor%\n} while (%cursor%)\n
#~ switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%

#~ [C++]
#~ if=if (%cursor%)%block_cursor%
#~ else=else%block_cursor%
#~ for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%
#~ while=while (%cursor%)%block_cursor%
#~ do=do\n{\n\t%cursor%\n} while (%cursor%)\n
#~ switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
#~ try=try%block%\ncatch (%cursor%)%block_cursor%

#~ [Java]
#~ if=if (%cursor%)%block_cursor%
#~ else=else%block_cursor%
#~ for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%
#~ while=while (%cursor%)%block_cursor%
#~ do=do\n{\n\t%cursor%\n} while (%cursor%)\n
#~ switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
#~ try=try%block%\ncatch (%cursor%)%block_cursor%

[PHP]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
ifelse=if (%cursor%)%brace_open%\n%brace_close%else%brace_open%\n%brace_close%
for=for ($i = 0; $i < %cursor%; $i++)%brace_open%\n%brace_close%
foreach=foreach(%cursor% as $row)%brace_open%\n%brace_close%
#~ while=while (%cursor%)%block_cursor%
#~ do=do\n{\n\t%cursor%\n} while (%cursor%)\n
#~ switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
#~ try=try%block%\ncatch (%cursor%)%block_cursor%
#CodeIgniter
#Benchmark Class
mark=mark('%cursor%');
elapsed_time=elapsed_time('%cursor%', '');
memory_usage=memory_usage();
#Calendar Class
generate=generate(%cursor%);
#Cart Class
insert=insert(%cursor%);
update=update(%cursor%);
total=total();
total_items=total_items();
contents=contents();
has_options=has_options(%cursor%);
product_options=product_options(%cursor%);
destory=destory();
#Config Class
load=load('%cursor%');
item=item('%cursor%');
set_item=set_item('%cursor%','');
site_url=site_url(%cursor%);
base_url=base_url(%cursor%);
system_url=system_url(%cursor%);
#Email Class
from=from('%cursor%','');
reply_to=reply_to('%cursor%','');
to=to(%cursor%);
cc=cc(%cursor%);
bcc=bcc(%cursor%);
subject=subject('%cursor%');
message=message('%cursor%');
set_alt_message=set_alt_message('%cursor%');
clear=clear();
send=send();
attach=attach('%cursor%');
print_debugger=print_debugger();
#Encryption Class
encode=encode(%cursor%);
decode=decode(%cursor%);
set_cipher=set_cipher(%cursor%);
set_mode=set_mode(%cursor%);
sha1=sha1(%cursor%);
encode_from_legacy=encode_from_legacy(%cursor%);
#File Uploading Class
do_upload=do_upload(%cursor%);
display_errors=display_errors(%cursor);
data=data();
#Form Validation Class
set_rules=set_rules(%cursor%);
run=run();
set_message=set_message(%cursor%);
form_error=form_error(%cursor%);
validation_errors=validation_errors();
set_value=set_value(%cursor%);
set_select=set_select(%cursor%);
set_checkbox=set_checkbox(%cursor%);
set_radio=set_radio(%cursor%);
#FTP Class
connect=connect(%cursor%);
upload=upload(%cursor%);
download=download(%cursor%);
rename=rename(%cursor%);
move=move(%cursor%);
delete_file=delete_file(%cursor%);
delete_dir=delete_dir(%cursor%);
list_files=list_files(%cursor%);
mirror=mirror(%cursor%);
mkdir=mkdir(%cursor%);
chmod=chmod(%cursor%);
close=close(%cursor%);
#HTML Table Class
generate=generate(%cursor%);
set_caption=set_caption(%cursor%);
set_heading=set_heading(%cursor%);
add_row=add_row(%cursor%);
make_columns=make_columns(%cursor%);
set_template=set_template(%cursor%);
set_empty=set_empty(%cursor%);
clear=clear(%cursor%);
#Image Manipulation Class
initialize=initialize(%cursor%);
resize=resize();
crop=crop();
rotate=rotate();
clear=clear();
watermark=watermark();
#Input Class
#Javascript Class
#Loader Class
#Language Class
#Migration Class
#Output Class
#Pagination Class
#Security Class
#Session Class
ci_session_setuserdata=$this->session->set_userdata('%cursor%','%cursor%');
ci_session_userdata=$this->session->userdata('%cursor%');
ci_session_unsetuserdata=$this->session->unset_userdata('%cursor%');
ci_session_destory=$this->session->sess_destroy('%cursor%');
#Trackback Class
#Template Parser Class
#Typography Class
#Unit Testing Class
#URI Class
#User Agent Class
#XML-RPC Class
#Zip Encoding Class
#Caching Class
#Database Class
ci_db_select=$this->db->select('%cursor%',false);
ci_db_where=$this->db->where('%cursor%','%cursor%');
ci_db_order=$this->db->order_by('%cursor%','%cursor%');
ci_db_get=$this->db->get('%cursor%');
ci_db_start=$this->db->trans_start();
ci_db_status=$this->db->trans_status();
ci_db_comp=$this->db->trans_complete();
ci_db_lastquery=$this->db->last_query();
ci_db_insert=$this->db->insert('%cursor%',%cursor%);
ci_db_insertstring=$this->db->insert_string('%cursor%',%cursor%);
ci_db_insertid=$this->db->insert_id();
ci_db_update=$this->db->update('%cursor%',%cursor%);
ci_db_delete=$this->db->delete('%cursor%');
#Javascript Class
#Array Helper
#CAPTCHA Helper
#Cookie Helper
#Date Helper
#Directory Helper
#Download Helper
#Email Helper
#File Helper
#Form Helper
#HTML Helper
#Inflector Helper
#Language Helper
#Number Helper
#Path Helper
#Security Helper
#Smiley Helper
#String Helper
#Text Helper
#Typography Helper
#URL Helper
#XML Helper
jencode=json_encode(%cursor%,JSON_NUMERIC_CHECK);
jdecode=json_decode(%cursor%,true);

[Javascript]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
#~ while=while (%cursor%)%block_cursor%
#~ do=do\n{\n\t%cursor%\n} while (%cursor%)\n
#~ switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
#~ try=try%block%\ncatch (%cursor%)%block_cursor%
ready=$(document).ready(function() {\n	%cursor%$('.class').\n});
click=$('%cursor%').click(function() {\n	%cursor%\n});
hover=$('%cursor%').hover(function() {\n	%cursor%\n});
toggle=$('%cursor%').toggle(function() {\n	%cursor%\n});
submit=$('%cursor%').submit(function() {\n	%cursor%\n});
log=console.log(%cursor%);

#~ [C#]
#~ if=if (%cursor%)%block_cursor%
#~ else=else%block_cursor%
#~ for=for (i = 0; i < %cursor%; i++)%block_cursor%
#~ while=while (%cursor%)%block_cursor%
#~ do=do\n{\n\t%cursor%\n} while (%cursor%)\n
#~ switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
#~ try=try%block%\ncatch (%cursor%)%block_cursor%

#~ [Vala]
#~ if=if (%cursor%)%block_cursor%
#~ else=else%block_cursor%
#~ for=for (i = 0; i < %cursor%; i++)%block_cursor%
#~ while=while (%cursor%)%block_cursor%
#~ do=do\n{\n\t%cursor%\n} while (%cursor%)\n
#~ switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
#~ try=try%block%\ncatch (%cursor%)%block_cursor%

#~ [ActionScript]
#~ if=if (%cursor%)%block_cursor%
#~ else=else%block_cursor%
#~ for=for (i = 0; i < %cursor%; i++)%block_cursor%
#~ while=while (%cursor%)%block_cursor%
#~ do=do\n{\n\t%cursor%\n} while (%cursor%)\n
#~ switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
#~ try=try%block%\ncatch (%cursor%)%block_cursor%

#~ [Python]
#~ for=for i in xrange(%cursor%):\n\t
#~ if=if %cursor%:\n\t
#~ elif=elif %cursor%:\n\t
#~ else=else:\n\t
#~ while=while %cursor%:\n\t
#~ try=try:\n\t%cursor%\nexcept Exception, ex:\n\t
#~ with=with %cursor%:\n\t
#~ def=def %cursor% (%cursor%):\n\t""" Function doc """\n\t
#~ class=class %cursor%:\n\t""" Class doc """\n\t\n\tdef __init__ (self):\n\t\t""" Class initialiser """\n\t\tpass

#~ [Ferite]
#~ iferr=iferr%block_cursor%fix%block%
#~ monitor=monitor%block_cursor%handle%block%

#~ [Haskell]

[HTML]
table=<table>\n\t<tr>\n\t\t<td>%cursor%</td>\n\t</tr>\n</table>

#~ [Erlang]
#~ case=case %cursor% of\n\t%cursor% -> %cursor%\nend
#~ if=if\n\t%cursor% -> %cursor%\nend
#~ begin=begin\n\t%cursor%\nend
#~ fun=fun(%cursor%) ->\n\t%cursor%\nend
#~ try=try %cursor% of\n\t%cursor% ->\n\t%cursor%\ncatch\n\t%cursor% ->\n\t%cursor%\nend
#~ module=-module(%cursor%).
#~ export=-export(%cursor%).
#~ compile=-compile(%cursor%).
#~ include=-include(%cursor%).
